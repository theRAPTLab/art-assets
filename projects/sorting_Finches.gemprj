{
  "id": "sorting_Finches",
  "label": "SSMV CT Model",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": 11393254,
    "roundsCanLoop": true,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false
# PROGRAM INIT

// Explanation:
// This starter model assumes you have at least 2 charaacters, one that is controllable by IsPozyxControllable
// and one that is not though you can use character controller with the second
// Change this description once you are ready to share the model so others know how it is supposed to work.

addFeature Population

prop global.visible setTo false
addProp numfinchSmall number 0
addProp numfinchMed number 0
addProp numfinchLar number 0
addProp prediction boolean false

// required directive
# PROGRAM UPDATE`
    },
    {
      "name": "scientist",
      "scriptText": `# BLUEPRINT scientist
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved

addFeature Costume
addFeature Physics
addFeature Touches

addProp beakLength number 0
addProp tempBeakLength number 0
addProp beakType number 0
addProp carrying boolean false

featProp scientist.Costume.costumeName setTo 'SF_scientist.png'
featProp scientist.Costume.scale setTo 0.5

featCall scientist.Touches monitor 'finches' b2b
featCall scientist.Touches monitor 'nest' c2c
featCall scientist.Touches monitor 'scientist' b2b
featCall scientist.Touches monitor 'clipboard' b2b

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish


every 1 runAtStart [[
  ifProp scientist.carrying equal true [[
    dbgOut 'carrying true'
  ]]
  ifProp scientist.carrying equal false [[
    dbgOut 'carrying false'
  ]]
]]


when scientist firsttouches finches [[
  ifProp scientist.carrying equal false [[
    ifProp finches.carried equal false [[
      featProp finches.Costume.glow setTo 1
      propPush finches.beakLength
      propPop scientist.beakLength
      propPush finches.beakType
      propPop scientist.beakType
      prop finches.visible setTo false
      featProp scientist.Costume.costumeName setTo 'SF_scientistcarrying.png'
      featProp scientist.Costume.scale setTo 0.3
      prop finches.carried setTo true
      prop scientist.carrying setTo true

    ]]
  ]]
]]

when scientist centerfirsttouchescenter nest [[
  ifProp scientist.carrying equal true [[
    ifProp nest.occupied equal false [[

      // change costumes to show scientist placing finch in nest
      featProp scientist.Costume.costumeName setTo 'SF_scientist.png'
      featProp nest.Costume.costumeName setTo 'SF_nestoccupied.png'
      featProp nest.Costume.glow setTo 1
      featProp nest.Costume.scale setTo 0.2
      featProp nest.Costume.glow setTo 1

      // transfer the beaklength and beaktype properties from the scientist to the nest
      propPush scientist.beakLength
      propPop nest.beakLength
      propPush scientist.beakType
      propPop nest.beakType

      // set the nest as full
      prop nest.occupied setTo true
    ]]
  ]]
  ifProp scientist.carrying equal false [[
    ifProp nest.occupied equal true [[
      featProp scientist.Costume.glow setTo 1
      featProp scientist.Costume.costumeName setTo 'SF_scientistcarrying.png'
      featProp scientist.Costume.scale setTo 0.3
      featProp nest.Costume.costumeName setTo 'SF_nest.png'
      featProp nest.Costume.scale setTo 0.1
      // transfer the beaklength and beaktype properties from the nest to the scientist
      propPush nest.beakLength
      propPop scientist.beakLength
      propPush nest.beakType
      propPop scientist.beakType
      // set the new nest and scientist carrying properties
      prop scientist.carrying setTo true
      prop nest.occupied setTo false
      _comment
      prop nest.beakLength setTo 0
      prop nest.beakType setTo 0
    ]]
  ]]
]]

when scientist centerlasttouchescenter nest [[
  ifProp scientist.carrying equal true [[
    ifProp nest.occupied equal true [[
      prop scientist.carrying setTo false
      prop scientist.beakLength setTo 0
      prop scientist.beakType setTo 0
    ]]
  ]]
]]

// scientists holding a finch can interact with another scientist holding a finch
when scientist firsttouches scientist [[
  ifProp scientist.carrying equal true [[
    ifProp agent.carrying equal true [[
      propPush agent.beakLength
      propPop scientist.tempBeakLength
      ifExpr {{ scientist.getProp('beakLength').value >= scientist.getProp('tempBeakLength').value }} [[
        featProp scientist.Costume.costumeName setTo 'SF_scientistcarryinglarger.png'
        featProp agent.Costume.costumeName setTo 'SF_scientistcarryingsmaller.png'
        featProp scientist.Costume.glow setTo 1
        featProp agent.Costume.glow setTo 1
      ]]
      ifExpr {{ scientist.getProp('beakLength').value < scientist.getProp('tempBeakLength').value }} [[
        featProp scientist.Costume.costumeName setTo 'SF_scientistcarryingsmaller.png'
        featProp agent.Costume.costumeName setTo 'SF_scientistcarryinglarger.png'
        featProp scientist.Costume.glow setTo 1
        featProp agent.Costume.glow setTo 1
      ]]
    ]]
  ]]
]]`
    },
    {
      "name": "background",
      "scriptText": `# BLUEPRINT background
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp background.Costume.costumeName setTo 'SF_background.png'
featProp background.Costume.scale setTo 0.795
featProp background.Costume.height setTo 1800

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "island1",
      "scriptText": `# BLUEPRINT island1
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island1.Costume.costumeName setTo 'SF_island1.png'
featProp island1.Costume.scale setTo 0.15

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "island2",
      "scriptText": `# BLUEPRINT island2
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island2.Costume.costumeName setTo 'SF_island2.png'
featProp island2.Costume.scale setTo 0.7

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "island3",
      "scriptText": `# BLUEPRINT island3
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island3.Costume.costumeName setTo 'SF_island3.png'
featProp island3.Costume.scale setTo 0.5

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "island4",
      "scriptText": `# BLUEPRINT island4
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island4.Costume.costumeName setTo 'SF_island4.png'
featProp island4.Costume.scale setTo 0.13

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "finches",
      "scriptText": `# BLUEPRINT finches
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Population
addFeature Physics
addFeature Movement
addFeature Touches

addProp beakType number 0
addProp beakLength number 0
addProp carried boolean false

featProp finches.Costume.costumeName setTo 'SF_finch.png'
featProp finches.Costume.scale setTo 0.3

featCall finches.Touches monitor 'scientist' b2b


# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "nest",
      "scriptText": `# BLUEPRINT nest
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches

addProp occupied boolean false
addProp nestSize number 0
addProp beakLength number 0
addProp beakType number 0
addProp match number 0

featProp nest.Costume.costumeName setTo 'SF_nest.png'
featProp nest.Costume.scale setTo 0.1

featCall nest.Touches monitor 'scientist' c2c


# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]
every 1 runAtStart [[
  ifProp nest.occupied equal false [[
    dbgOut 'occupied false'
  ]]
  ifProp nest.occupied equal true [[
    dbgOut 'occupied true'
  ]]
]]

ifProp global.prediction equal true [[
  ifProp nest.occupied equal true [[
    exprPush {{ nest.getProp('nestSize').value - nest.getProp('beakType').value }}
    propPop nest.match
    ifProp nest.match equal 0 [[
      featProp finches.Costume.glow setTo 1
      featProp finches.Movement.movementType setTo 'jitter'
      featProp finches.Movement.jitterDistance setTo 1
    ]]
    ifProp nest.match notEqual 0 [[
      prop finches.alpha setTo 0.3
    ]]
  ]]
]]


// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    },
    {
      "name": "clipboard",
      "scriptText": `# BLUEPRINT clipboard
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches

featProp clipboard.Costume.costumeName setTo 'SF_clipboard.png'
featProp clipboard.Costume.scale setTo 0.12

featCall clipboard.Touches monitor 'scientist' b2b

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]


when scientist firsttouches clipboard [[
  prop global.prediction setTo true

]]

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body`
    }
  ],
  "instances": [
    {
      "id": "1",
      "label": "background1",
      "bpid": "background",
      "initScript": `prop x setTo -1.94
prop y setTo -19.44`
    },
    {
      "id": "2",
      "label": "island12",
      "bpid": "island1",
      "initScript": `prop x setTo -310.61
prop y setTo -284.80`
    },
    {
      "id": "7",
      "label": "island27",
      "bpid": "island2",
      "initScript": `prop x setTo 3.76
prop y setTo -292.34`
    },
    {
      "id": "9",
      "label": "island49",
      "bpid": "island4",
      "initScript": `prop x setTo 306.99
prop y setTo -301.34`
    },
    {
      "id": "25",
      "label": "finches4",
      "bpid": "finches",
      "initScript": `prop x setToRnd -350 350 false
prop y setToRnd -74 74 false
prop beakType setTo 1
prop beakLength setToRnd 9 13 false`
    },
    {
      "id": "26",
      "label": "finches2",
      "bpid": "finches",
      "initScript": `prop x setToRnd -350 350 false
prop y setToRnd -74 74 false
prop beakType setTo 0
prop beakLength setToRnd 5 8 false`
    },
    {
      "id": "27",
      "label": "finches1",
      "bpid": "finches",
      "initScript": `prop x setToRnd -350 350 false
prop y setToRnd -74 74 false
prop beakType setTo 0
prop beakLength setToRnd 5 8 false`
    },
    {
      "id": "28",
      "label": "finches3",
      "bpid": "finches",
      "initScript": `prop x setToRnd -350 350 false
prop y setToRnd -74 74 false
prop beakType setTo 1
prop beakLength setToRnd 9 13 false`
    },
    {
      "id": "29",
      "label": "finches5",
      "bpid": "finches",
      "initScript": `prop x setToRnd -350 350 false
prop y setToRnd -74 74 false
prop beakType setTo 2
prop beakLength setToRnd 14 17 false`
    },
    {
      "id": "30",
      "label": "finches6",
      "bpid": "finches",
      "initScript": `prop x setToRnd -350 350 false
prop y setToRnd -74 74 false
prop beakType setTo 2
prop beakLength setToRnd 14 17 false`
    },
    {
      "id": "31",
      "label": "nest1",
      "bpid": "nest",
      "initScript": `prop x setTo -348.82
prop y setTo -139.18
prop nestSize setTo 0`
    },
    {
      "id": "32",
      "label": "nest2",
      "bpid": "nest",
      "initScript": `prop x setTo -250.47
prop y setTo -191.47
prop nestSize setTo 0`
    },
    {
      "id": "33",
      "label": "nest3",
      "bpid": "nest",
      "initScript": `prop x setTo -65.35
prop y setTo -209.12
prop nestSize setTo 1`
    },
    {
      "id": "34",
      "label": "nest4",
      "bpid": "nest",
      "initScript": `prop x setTo 61.18
prop y setTo -209.7
prop nestSize setTo 1`
    },
    {
      "id": "35",
      "label": "nest5",
      "bpid": "nest",
      "initScript": `prop x setTo 245.36
prop y setTo -200.29
prop nestSize setTo 2`
    },
    {
      "id": "36",
      "label": "nest6",
      "bpid": "nest",
      "initScript": `prop x setTo 356
prop y setTo -146.24
prop nestSize setTo 2`
    },
    {
      "id": "37",
      "label": "clipboard37",
      "bpid": "clipboard",
      "initScript": `prop x setTo -348.7
prop y setTo 308.59`
    }
  ]
}