{
  "id": "sorting_Finches",
  "label": "SSMV CT Model",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": 11393254,
    "roundsCanLoop": true,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false
# PROGRAM INIT

// Explanation:
// This starter model assumes you have at least 2 charaacters, one that is controllable by IsPozyxControllable
// and one that is not though you can use character controller with the second
// Change this description once you are ready to share the model so others know how it is supposed to work.


prop global.visible setTo false

// required directive
# PROGRAM UPDATE`
    },
    {
      "name": "InteractingCharacter1",
      "scriptText": `# BLUEPRINT InteractingCharacter1
# TAG isPozyxControllable false
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved

addFeature Costume
featProp InteractingCharacter1.Costume.costumeName setTo 'square.json'

addFeature Physics
addFeature Touches


# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish

`
    },
    {
      "name": "scientist",
      "scriptText": `# BLUEPRINT scientist
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved

addFeature Costume
featProp scientist.Costume.costumeName setTo 'SF_scientist.png'
featProp scientist.Costume.scale setTo 0.5

addFeature Physics
addFeature Touches

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "background",
      "scriptText": `# BLUEPRINT background
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp background.Costume.costumeName setTo 'SF_background.png'
featProp background.Costume.scale setTo 0.795

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "island1",
      "scriptText": `# BLUEPRINT island1
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island1.Costume.costumeName setTo 'SF_island1.png'
featProp island1.Costume.scale setTo 0.15

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "island2",
      "scriptText": `# BLUEPRINT island2
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island2.Costume.costumeName setTo 'SF_island2.png'
featProp island2.Costume.scale setTo 0.7

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "island3",
      "scriptText": `# BLUEPRINT island3
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island3.Costume.costumeName setTo 'SF_island3.png'
featProp island3.Costume.scale setTo 0.5

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "island4",
      "scriptText": `# BLUEPRINT island4
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp island4.Costume.costumeName setTo 'SF_island4.png'
featProp island4.Costume.scale setTo 0.13

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "finches",
      "scriptText": `# BLUEPRINT finches
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Movement
addFeature Touches
addFeature Physics

addProp beakLength number 1

featProp finches.Costume.costumeName setTo 'SF_finch1.png'
featProp finches.Costume.scale setTo 0.3

prop finches.beakLength setToRnd 3 17 false


# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]
onEvent START [[
  featProp finches.Movement.movementType setTo 'jitter'
  featProp finches.Movement.distance setTo 0.1
]]


// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "FinchesSmall",
      "scriptText": `# BLUEPRINT FinchesSmall
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Movement

addProp beakLength number 1


featProp FinchesSmall.Costume.costumeName setTo 'SF_finch3.png'
featProp FinchesSmall.Costume.scale setTo 0.4

featCall FinchesSmall.Touches monitor 'scientist' b2b



# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

onEvent START [[
  featProp FinchesSmall.Movement.movementType setTo 'jitter'
  featProp FinchesSmall.Movement.jitterDistance setTo 1
]]




// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "finchesMedium",
      "scriptText": `# BLUEPRINT finchesMedium
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp finchesMedium.Costume.costumeName setTo 'SF_finches4.png'

# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    },
    {
      "name": "finchesLarge",
      "scriptText": `# BLUEPRINT finchesLarge
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Movement
addFeature Touches
addProp beakLength number 17

featProp finchesLarge.Costume.costumeName setTo 'SF_finches6'
prop finchesLarge.beakLength setToRnd 14 17 false


# PROGRAM UPDATE
// code to run every frame
// when xxx touches yyy [[ ]]
// every 5 runAfter [[ ]]
// onEvent Tick [[ ]]
onEvent START [[
  featProp finchesLarge.Movement.movementType setTo 'edgetoedge'
  featProp finchesLarge.Movement.distance setTo 1
]]
// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body`
    }
  ],
  "instances": [
    {
      "id": "1",
      "label": "background1",
      "bpid": "background",
      "initScript": `prop x setTo -1.94
prop y setTo -19.44`
    },
    {
      "id": "2",
      "label": "island12",
      "bpid": "island1",
      "initScript": `prop x setTo -301.78
prop y setTo -220.09`
    },
    {
      "id": "3",
      "label": "scientist3",
      "bpid": "scientist",
      "initScript": `prop x setTo 283.55
prop y setTo 267.76`
    },
    {
      "id": "4",
      "label": "scientist4",
      "bpid": "scientist",
      "initScript": `prop x setTo 104.27
prop y setTo 271.57`
    },
    {
      "id": "5",
      "label": "scientist5",
      "bpid": "scientist",
      "initScript": `prop x setTo -119.32
prop y setTo 274.49`
    },
    {
      "id": "6",
      "label": "scientist6",
      "bpid": "scientist",
      "initScript": `prop x setTo -324.49
prop y setTo 278.92`
    },
    {
      "id": "7",
      "label": "island27",
      "bpid": "island2",
      "initScript": `prop x setTo -113.89
prop y setTo -340.87`
    },
    {
      "id": "8",
      "label": "island38",
      "bpid": "island3",
      "initScript": `prop x setTo 103.67
prop y setTo -228.58`
    },
    {
      "id": "9",
      "label": "island49",
      "bpid": "island4",
      "initScript": `prop x setTo 304.05
prop y setTo -324.86`
    },
    {
      "id": "10",
      "label": "finches10",
      "bpid": "finches",
      "initScript": `prop x setTo -300.69
prop y setTo 24.39`
    },
    {
      "id": "11",
      "label": "finches11",
      "bpid": "finches",
      "initScript": `prop x setTo 198.79
prop y setTo 16.36`
    },
    {
      "id": "12",
      "label": "FinchesSmall12",
      "bpid": "FinchesSmall",
      "initScript": `prop x setTo -32.35
prop y setTo 38.29`
    }
  ]
}