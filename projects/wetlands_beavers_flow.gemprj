{
  "id": "wetlands_beavers_flow",
  "label": "Wetlands: Beavers Flow",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": "0x8A9A5B",
    "roundsCanLoop": true,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false

# PROGRAM INIT
addFeature IU
addFeature Population
prop global.visible setTo false

// current col / row
// 0 means we haven't started this run yet
addProp col number 0
addProp row number 0

// choices in this run
addProp currentColChoice string ''
addProp colChoice1 string ''
addProp colChoice2 string ''
addProp colChoice3 string ''

addProp nextCol number 0

featCall global.IU setupFunction 'updateFlowActions' [[
  propPush global.col
  propPop global.nextCol
  prop global.nextCol add 1

  featCall global.Population charactersForEach FlowAction [[
    featCall FlowAction.IU callFunction 'updateActionDisplay'
  ]]
]]
# PROGRAM UPDATE`
    },
    {
      "name": "FlowDirector",
      "scriptText": `# BLUEPRINT FlowDirector
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT

addFeature Costume
featProp FlowDirector.Costume.costumeName setTo 'GEN_circle.json'
featProp FlowDirector.Costume.scale setTo 0.3

addFeature Physics
addFeature Touches

featCall FlowDirector.Touches monitor 'FlowAction' c2b
featCall FlowDirector.Touches monitor 'Start' c2b

# PROGRAM UPDATE

when FlowDirector centerfirsttouches Start [[
  // re-set the global properties so that we can display what is going on in this set of choices
  prop global.col setTo 0
  prop global.row setTo 0
  prop global.colChoice1 setTo ''
  prop global.colChoice2 setTo ''
  prop global.colChoice3 setTo ''
  prop global.currentColChoice setTo ''

  // we are starting a new run, so clear things out and get us ready
  featCall global.IU callFunction 'updateFlowActions'
]]

when FlowDirector centerfirsttouches FlowAction [[
  // update the global row and col then run tun the updateActions code
  propPush FlowAction.col
  propPop global.col
  propPush FlowAction.row
  propPop global.row
  propPush FlowAction.actionChoice
  propPop global.currentColChoice

  featCall global.IU callFunction 'updateFlowActions'
]]`
    },
    {
      "name": "FlowAction",
      "scriptText": `# BLUEPRINT FlowAction
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Physics
addFeature Touches
addFeature Costume
addFeature IU

featProp FlowAction.Costume.costumeName setTo 'WL_seq_blank.png'
featProp FlowAction.Costume.scale setTo 0.4
prop FlowAction.alpha setTo 0.5

addProp row number 0
addProp col number 0

addProp actionChoice string ''
prop FlowAction.actionChoice addOption 'not chosen yet' 'not chosen yet'
prop FlowAction.actionChoice addOption 'collect materials' 'collect materials'
prop FlowAction.actionChoice addOption 'work on dam' 'work on dam'
prop FlowAction.actionChoice addOption 'work on lodge' 'work on lodge'
prop FlowAction.actionChoice addOption 'play' 'play'
prop FlowAction.actionChoice addOption 'eat and store food' 'eat and store food'
prop FlowAction.actionChoice setToOption 'not chosen yet'

featCall FlowAction.IU setupFunction 'updateActionDisplay' [[

  // double check the numbers make sense here.
  ifProp global.col equal 0 [[
    ifProp FlowAction.col equal 1 [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'work on dam'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'

      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'play'
      ]]

    ]]

    ifProp FlowAction.col equal 2 [[

    ]]

    ifProp FlowAction.col equal 3 [[

    ]]
  ]]

  // update the art based on the current selection
  ifProp FlowAction.actionChoice equalToOption 'not chosen yet' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_blank.png'
  ]]

  ifProp FlowAction.actionChoice equalToOption 'collect materials' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_collect.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'work on dam' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_dam.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'work on lodge' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_lodge.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'play' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_play.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'eat and store food' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_eat.png'
  ]]
]]

# PROGRAM UPDATE`
    },
    {
      "name": "Teacher",
      "scriptText": `# BLUEPRINT Teacher
# TAG isCharControllable false
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp Teacher.Costume.costumeName setTo 'GEN_onexone.json'
prop Teacher.visible setTo false

# PROGRAM UPDATE`
    },
    {
      "name": "Unused",
      "scriptText": `# BLUEPRINT Unused
# TAG isCharControllable false
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp Unused.Costume.costumeName setTo 'GEN_onexone.json'
prop Unused.visible setTo false

# PROGRAM UPDATE`
    },
    {
      "name": "Start",
      "scriptText": `# BLUEPRINT Start
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Physics
addFeature Costume
featProp Start.Costume.costumeName setTo 'KB_marker_home.png'
featProp Start.Costume.scale setTo 0.4
# PROGRAM UPDATE

`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "FlowAction 1 1",
      "bpid": "FlowAction",
      "initScript": `prop x setTo -210
prop y setTo -250
prop FlowAction.col setTo 1
prop FlowAction.row setTo 1
`
    },
    {
      "id": "1",
      "label": "FlowAction 1 2",
      "bpid": "FlowAction",
      "initScript": `prop x setTo -210
prop y setTo -40
prop FlowAction.col setTo 1
prop FlowAction.row setTo 2`
    },
    {
      "id": "2",
      "label": "FlowAction 1 3",
      "bpid": "FlowAction",
      "initScript": `prop x setTo -210
prop y setTo 180
prop FlowAction.col setTo 1
prop FlowAction.row setTo 3`
    },
    {
      "id": "3",
      "label": "FlowAction 2 1",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 40
prop y setTo -250
prop FlowAction.col setTo 2
prop FlowAction.row setTo 1`
    },
    {
      "id": "4",
      "label": "FlowAction 2 2",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 40
prop y setTo -40
prop FlowAction.col setTo 2
prop FlowAction.row setTo 2`
    },
    {
      "id": "5",
      "label": "FlowAction 2 3",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 40
prop y setTo 180
prop FlowAction.col setTo 2
prop FlowAction.row setTo 3`
    },
    {
      "id": "6",
      "label": "FlowAction 3 1",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 290
prop y setTo -250
prop FlowAction.col setTo 3
prop FlowAction.row setTo 1`
    },
    {
      "id": "7",
      "label": "FlowAction 3 2",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 290
prop y setTo -40
prop FlowAction.col setTo 3
prop FlowAction.row setTo 2`
    },
    {
      "id": "8",
      "label": "FlowAction 3 3",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 290
prop y setTo 180
prop FlowAction.col setTo 3
prop FlowAction.row setTo 3`
    },
    {
      "id": "9",
      "label": "Start",
      "bpid": "Start",
      "initScript": `prop x setTo -387.43
prop y setTo -38.52`
    }
  ]
}