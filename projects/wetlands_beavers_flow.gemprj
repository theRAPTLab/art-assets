{
  "id": "wetlands_beavers_flow",
  "label": "Wetlands: Beavers Flow",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": "0x8A9A5B",
    "roundsCanLoop": true,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false

# PROGRAM INIT
addFeature IU
addFeature Population
prop global.visible setTo false

// current col / row
// 0 means we haven't started this run yet
addProp col number 0
addProp row number 0

// choices in this run
addProp lastColChoice string ''

// choices across runs
addProp collectedMaterialsCount number 0
addProp workedOnDamCount number 0
addProp workedOnLodgeCount number 0
addProp playedCount number 0
addProp ateAndStoredCount number 0

// setup the basic properties for the flow actions
featCall global.IU setupFunction 'initFlowActions' [[
  featCall global.Population charactersForEach FlowAction [[
    featCall FlowAction.IU callFunction 'initActionDisplay'
  ]]
]]

// tell all the flow actions to update their display based on
// the current col and most recent choice (if any)
featCall global.IU setupFunction 'updateFlowActions' [[
  featCall global.Population charactersForEach FlowAction [[
    featCall FlowAction.IU callFunction 'updateActionDisplay'
  ]]
]]
# PROGRAM UPDATE`
    },
    {
      "name": "FlowDirector",
      "scriptText": `# BLUEPRINT FlowDirector
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT

addFeature Costume
featProp FlowDirector.Costume.costumeName setTo 'GEN_circle.json'
featProp FlowDirector.Costume.scale setTo 0.3

addFeature Physics
addFeature Touches

featCall FlowDirector.Touches monitor 'FlowAction' c2b
featCall FlowDirector.Touches monitor 'Start' c2b

# PROGRAM UPDATE

when FlowDirector centerfirsttouches Start [[
  // re-set the global properties so that we can display what is going on in this set of choices
  prop global.col setTo 0
  prop global.row setTo 0
  prop global.lastColChoice setTo ''

  // we are starting a new run, so clear things out and get us ready
  featCall global.IU callFunction 'initFlowActions'
  featCall global.IU callFunction 'updateFlowActions'
]]

when FlowDirector centerfirsttouches FlowAction [[
  // ignore if we have been locked 
  ifProp FlowAction.locked equal false [[
    // the not chosen yet actions are all the ones to the right of the current row, so ignore if we are one of those
    ifProp FlowAction.actionChoice notEqual 'not chosen yet' [[
      // mark this FlowAction selected
      prop FlowAction.selected setTo true

      // set the global context to be this col and row so we know what was selected
      // this helps in iterating through the FlowActions to update them (see updateFlowActions)
      propPush FlowAction.col
      propPop global.col
      propPush FlowAction.row
      propPop global.row

      // record this as the lastColChoice so we know what's what 
      propPush FlowAction.actionChoice
      propPop global.lastColChoice


      // do any global variable updating based on what type we are so displays update
      ifProp FlowAction.actionChoice equalToOption 'collect materials' [[
        prop global.collectedMaterialsCount add 1
      ]]
      ifProp FlowAction.actionChoice equalToOption 'work on dam' [[
        prop global.workedOnDamCount add 1
      ]]
      ifProp FlowAction.actionChoice equalToOption 'work on lodge' [[
        prop global.workedOnLodgeCount add 1
      ]]
      ifProp FlowAction.actionChoice equalToOption 'play' [[
        prop global.playedCount add 1
      ]]
      ifProp FlowAction.actionChoice equalToOption 'eat and store food' [[
        prop global.ateAndStoredCount add 1
      ]]

      // update all of the flowActions
      featCall global.IU callFunction 'updateFlowActions'
    ]]
  ]]
]]`
    },
    {
      "name": "FlowAction",
      "scriptText": `# BLUEPRINT FlowAction
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Physics
addFeature Touches
addFeature Costume
addFeature IU

featProp FlowAction.Costume.costumeName setTo 'WL_seq_blank.png'
featProp FlowAction.Costume.scale setTo 0.4
prop FlowAction.alpha setTo 0.5

// where is this in the grid
addProp row number 0
addProp col number 0

// is this item locked (the column was selected) and was it the one chosen?
addProp locked boolean false
addProp selected boolean false

// All the choices of actions (not all are displayed in each column)
addProp actionChoice string ''
prop FlowAction.actionChoice addOption 'not chosen yet' 'not chosen yet'
prop FlowAction.actionChoice addOption 'collect materials' 'collect materials'
prop FlowAction.actionChoice addOption 'work on dam' 'work on dam'
prop FlowAction.actionChoice addOption 'work on lodge' 'work on lodge'
prop FlowAction.actionChoice addOption 'play' 'play'
prop FlowAction.actionChoice addOption 'eat and store food' 'eat and store food'
prop FlowAction.actionChoice setToOption 'not chosen yet'

addProp tempNum number 0

featCall FlowAction.IU setupFunction initActionDisplay [[
  prop FlowAction.locked setTo false
  prop FlowAction.selected setTo false
  prop FlowAction.alpha setTo 0.5
  prop FlowAction.actionChoice setToOption 'not chosen yet'
  featProp FlowAction.Costume.costumeName setTo 'WL_seq_blank.png'
]]

featCall FlowAction.IU setupFunction 'updateActionDisplay' [[

  // do some quick math so we know the relative difference between our current action and the current col
  // 0 means same col, 1 means this is directly to the right, 2 means further
  propPush global.col
  propPush FlowAction.col
  stackSub
  propPop FlowAction.tempNum

  // dbgOut {{ 'global.col: ' + global.getProp('col').value + 'FlowAction.col: ' + FlowAction.getProp('col').value + 'FlowAction.tempNum: ' + FlowAction.getProp('tempNum').value }}

  // if we are the current col, lock
  ifProp tempNum equal 0 [[
    // lock this row
    prop FlowAction.locked setTo true
    // if you aren't the selected one, then fade
    ifProp FlowAction.selected equal false [[
      prop FlowAction.alpha setTo 0.5
    ]]
  ]]

  // if we are the next valid set of choices, set up the options
  ifProp tempNum equal 1 [[
    prop FlowAction.alpha setTo 1

    // This is the first column because the prior was empty, so display initial options
    ifProp global.lastColChoice equal '' [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'collect materials'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'

      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'play'
      ]]
    ]]

    ifProp global.lastColChoice equal 'collect materials' [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'work on dam'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'
      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'play'
      ]]
    ]]

    ifProp global.lastColChoice equal 'play' [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'work on dam'
      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'play'
      ]]
    ]]

    ifProp global.lastColChoice equal 'eat and store food' [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'collect materials'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'
      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'play'
      ]]
    ]]

    ifProp global.lastColChoice equal 'work on dam' [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'work on lodge'
      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'play'
      ]]
    ]]

    ifProp global.lastColChoice equal 'work on lodge' [[
      ifProp FlowAction.row equal 1 [[
        prop FlowAction.actionChoice setToOption 'eat and store food'
      ]]
      ifProp FlowAction.row equal 2 [[
        prop FlowAction.actionChoice setToOption 'work on dam'
      ]]
      ifProp FlowAction.row equal 3 [[
        prop FlowAction.actionChoice setToOption 'work on lodge'
      ]]
    ]]

  ]]

  // if we are further to the right than the next set of options, blank and initialize
  ifProp tempNum greaterThan 1 [[
    // don't do anything since init handles it, so maybe remove this entire block ... 
    //prop FlowAction.actionChoice setToOption 'not chosen yet'
    //prop FlowAction.selected setTo false
    //prop FlowAction.locked setTo false
  ]]

  // update the art based on the current selection
  ifProp FlowAction.actionChoice equalToOption 'not chosen yet' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_blank.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'collect materials' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_collect.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'work on dam' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_dam.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'work on lodge' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_lodge.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'play' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_play.png'
  ]]
  ifProp FlowAction.actionChoice equalToOption 'eat and store food' [[
    featProp FlowAction.Costume.costumeName setTo 'WL_seq_eat.png'
  ]]
]]

# PROGRAM UPDATE`
    },
    {
      "name": "Teacher",
      "scriptText": `# BLUEPRINT Teacher
# TAG isCharControllable false
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp Teacher.Costume.costumeName setTo 'GEN_onexone.json'
prop Teacher.visible setTo false

# PROGRAM UPDATE`
    },
    {
      "name": "Unused",
      "scriptText": `# BLUEPRINT Unused
# TAG isCharControllable false
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp Unused.Costume.costumeName setTo 'GEN_onexone.json'
prop Unused.visible setTo false

# PROGRAM UPDATE`
    },
    {
      "name": "Start",
      "scriptText": `# BLUEPRINT Start
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Physics
addFeature Costume
featProp Start.Costume.costumeName setTo 'KB_marker_home.png'
featProp Start.Costume.scale setTo 0.4
# PROGRAM UPDATE

`
    },
    {
      "name": "UpdateText",
      "scriptText": `# BLUEPRINT UpdateText
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Graphing
addFeature Costume
featProp UpdateText.Costume.costumeName setTo 'GEN_onexone.json'
featProp UpdateText.Graphing.wordWrapWidth setTo 500
featProp UpdateText.Graphing.text setTo 'Updates will appear here temporarily'

# PROGRAM UPDATE

every 0.5 runAtStart [[
  exprPush {{'collectedMaterialsCount: ' + global.getProp('collectedMaterialsCount').value + ', workedOnDamCount: ' + global.getProp('workedOnDamCount').value +', workedOnLodgeCount: ' + global.getProp('workedOnLodgeCount').value +', playedCount: ' + global.getProp('playedCount').value +', ateAndStoredCount: ' + global.getProp('ateAndStoredCount').value}}
  featPropPop  UpdateText.Graphing.text 
]]


`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "FlowAction 1 1",
      "bpid": "FlowAction",
      "initScript": `prop x setTo -190
prop y setTo -270
prop FlowAction.col setTo 1
prop FlowAction.row setTo 1
`
    },
    {
      "id": "1",
      "label": "FlowAction 1 2",
      "bpid": "FlowAction",
      "initScript": `prop x setTo -190
prop y setTo -60
prop FlowAction.col setTo 1
prop FlowAction.row setTo 2`
    },
    {
      "id": "2",
      "label": "FlowAction 1 3",
      "bpid": "FlowAction",
      "initScript": `prop x setTo -190
prop y setTo 160
prop FlowAction.col setTo 1
prop FlowAction.row setTo 3`
    },
    {
      "id": "3",
      "label": "FlowAction 2 1",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 50
prop y setTo -270
prop FlowAction.col setTo 2
prop FlowAction.row setTo 1`
    },
    {
      "id": "4",
      "label": "FlowAction 2 2",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 50
prop y setTo -60
prop FlowAction.col setTo 2
prop FlowAction.row setTo 2`
    },
    {
      "id": "5",
      "label": "FlowAction 2 3",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 50
prop y setTo 160
prop FlowAction.col setTo 2
prop FlowAction.row setTo 3`
    },
    {
      "id": "6",
      "label": "FlowAction 3 1",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 290
prop y setTo -270
prop FlowAction.col setTo 3
prop FlowAction.row setTo 1`
    },
    {
      "id": "7",
      "label": "FlowAction 3 2",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 290
prop y setTo -60
prop FlowAction.col setTo 3
prop FlowAction.row setTo 2`
    },
    {
      "id": "8",
      "label": "FlowAction 3 3",
      "bpid": "FlowAction",
      "initScript": `prop x setTo 290
prop y setTo 160
prop FlowAction.col setTo 3
prop FlowAction.row setTo 3`
    },
    {
      "id": "9",
      "label": "Start",
      "bpid": "Start",
      "initScript": `prop x setTo -387.43
prop y setTo -38.52`
    },
    {
      "id": "10",
      "label": "UpdateText10",
      "bpid": "UpdateText",
      "initScript": `prop x setTo 38.70
prop y setTo 290.54`
    }
  ]
}