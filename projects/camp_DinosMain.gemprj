{
  "id": "camp_DinosMain",
  "label": "Camp EIP",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      true
    ],
    "bounce": true,
    "bgcolor": 102,
    "roundsCanLoop": true
  },
  "rounds": [],
  "blueprints": [
    {
      "id": "Background",
      "label": "Background",
      "scriptText": `# BLUEPRINT Background
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'map 2.1.png'

useFeature Physics
featProp Physics scale setTo 0.8

prop x setTo 0
prop y setTo 0
prop zIndex setTo -5

# PROGRAM INIT 
# PROGRAM EVENT
# PROGRAM UPDATE
`
    },
    {
      "id": "Triceratops",
      "label": "Triceratops",
      "scriptText": `# BLUEPRINT Triceratops
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'pc_triceratops.png' 0

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.15

useFeature Movement
featProp Movement useAutoOrientation setTo true
featProp Movement movementType setTo 'wander'
featProp Movement distance setTo 3
featCall Movement seekNearest Fern


addProp maxHealth Number 250

addProp hp Number 200
prop hp setMax 250
prop hp setMin 0

useFeature AgentWidgets
featCall AgentWidgets bindMeterTo hp
featProp AgentWidgets meterColor setTo 65280
exprPush {{ 'Tracy #' + agent.id }}
featPropPop AgentWidgets text

useFeature Touches
featCall Touches monitor Fern b2b
featCall Touches monitor Berries b2b
featCall Touches monitor Tyrannosaurus b2b
featCall Touches monitor Lake b2b
featCall Touches monitor River b2b

useFeature Vision
featProp Vision visionable setTo true

addProp state String 'default'
addProp spooked Boolean false
addProp attacked Boolean false

# PROGRAM EVENT
# PROGRAM UPDATE
every 1 runAtStart [[
//health goes down naturally over time
\tprop agent.hp sub 1
\t
//COSTUME + STATE SWAPS
//when the pc hasn't encountered a predator, costumes will change based on hunger/hp level
//when a pc is \"spooked\" (i.e. has been seen by a predator), they will appear scared until out of sight
//when a pc is \"attacked\" (i.e. has been touched by a predator), they will appear scared until >50 hp has been gained
//death state overrides all other states
\tifExpr {{agent.getProp('isInert').value === false }} [[ // if alive
\t\tifExpr {{agent.getProp('spooked').value === false && agent.getProp('attacked').value === false}} [[ //no predator engaged
\t\t\tifExpr {{agent.getProp('state').value == 'hungry'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_triceratops_hungry.png' 0
\t\t\t\tfeatCall Movement seekNearest Fern
\t\t\t\tfeatProp Movement distance setTo 3

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'default'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_triceratops.png' 0
\t\t\t\tfeatProp Movement distance setTo 3

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'sick'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_triceratops_sick.png' 0
\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'drowning'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_triceratops_drowning.png' 0
\t\t\t\tfeatCall Movement jitterRotate
\t\t\t\tfeatProp Movement distance setTo 0.5

\t\t\t\t
\t\t\t]]
\t\t]]
\t
\t\tifExpr {{agent.getProp('spooked').value === true}} [[ //seen by predator
\t\t\tfeatCall Costume setCostume 'pc_triceratops_scared.png' 0
\t\t\tfeatCall Movement jitterRotate
\t\t]]
\t
\t\tifExpr {{agent.getProp('attacked').value === true}} [[ //attacked by predator
\t\t\tifExpr {{agent.getProp('hp').value <= 50 }} [[
\t\t\t\tfeatCall Costume setCostume 'pc_triceratops_scared.png' 0
\t\t\t\tfeatCall Movement jitterRotate
\t\t\t]]
\t\t\tifExpr {{agent.getProp('hp').value > 50 }} [[
\t\t\t\tfeatCall Costume setCostume 'pc_triceratops.png' 0
\t\t\t\tprop attacked setTo false
\t\t\t]]
\t\t]]
\t]]
\tifExpr {{agent.getProp('isInert').value === true }} [[ //is dead
\t\tfeatCall Costume setCostume 'pc_triceratops_dead.png' 0
\t]]\t
\t

\t
//update color of meter & state based on hunger level
\tifExpr {{ agent.getProp('hp').value <= 75}} [[
\t\tprop state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16711680 //red
\t]]
\tifExpr {{ agent.getProp('hp').value <= 150 && agent.getProp('hp').value > 75}} [[
\t\tprop state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16737792 //orange
\t]]
\tifExpr {{ agent.getProp('hp').value > 150}} [[
\t\tprop state setTo 'default'
\t\tfeatProp AgentWidgets meterColor setTo 65280 //green
\t]]
\tifExpr {{ agent.getProp('hp').value <= 0 }} [[
\t\tprop isInert setTo true
\t]]
]]
 \t\t



`
    },
    {
      "id": "Fern",
      "label": "Fern",
      "scriptText": `# BLUEPRINT Fern
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'npc_fern.png' 0

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.1

useFeature Touches
featCall Touches monitor Triceratops b2b
featCall Touches monitor Parasaurolophus b2b
featCall Touches monitor Ankylosaurus b2b

addProp hp Number 6
prop hp setMax 6
prop hp setMin 0

useFeature Population

addProp time Number 0
prop time setMax 50
prop time setMin 0

addProp repopRate Number 0
prop repopRate addRndInt 5 60
prop repopRate setMax 60
prop repopRate setMin 0


# PROGRAM EVENT
# PROGRAM UPDATE

every 1 runAtStart [[
\tifExpr {{agent.getProp('hp').value <= 1}} [[
\t\tprop isInert setTo true
\t\tprop visible setTo false
\t]]
\t
\tifExpr {{ agent.getProp('time').value == agent.getProp('repopRate').value }} [[
\t\tfeatCall Population createAgent Fern [[
        \tprop x addRndInt -150 150
       \t \tprop y addRndInt -150 150
       \t \tprop hp setTo 4
\t\t\tprop repopRate setTo 0
       \t \tprop repopRate addRndInt 5 60 \t   
       \t]] 
\t]]
\texprPush {{(agent.getProp('hp').value * 0.02)}}
  \tfeatPropPop agent.Physics scale
\t
\tprop time add 1
\tifExpr {{ agent.getProp('time').value == 50 }} [[
\t\tprop time setTo 0
\t]]
]]

 //gains health when eating fern -- fern shrinks when eaten
when Fern touches Triceratops [[
  every 1 runAtStart [[
  \tifExpr {{ Triceratops.getProp('hp').value > 0 && Triceratops.getProp('hp').value < Triceratops.getProp('maxHealth').value}} [[
  \t\tfeatCall agent.Costume setGlow 0.1
\t  \tprop agent.hp sub 1
  \t\tprop Triceratops.hp add 15
  \t]]
  ]]
]]

when Fern touches Ankylosaurus [[
  every 1 runAtStart [[
  \tifExpr {{ Ankylosaurus.getProp('hp').value > 0 && Ankylosaurus.getProp('hp').value < Ankylosaurus.getProp('maxHealth').value}} [[
  \t\tfeatCall agent.Costume setGlow 0.1
\t  \tprop agent.hp sub 1
  \t\tprop Ankylosaurus.hp add 15
  \t]]
  ]]
]]


when Fern touches Parasaurolophus [[
  every 1 runAtStart [[
  \tifExpr {{ Parasaurolophus.getProp('hp').value > 0 && Parasaurolophus.getProp('hp').value < Parasaurolophus.getProp('maxHealth').value}} [[
  \t\tfeatCall agent.Costume setGlow 0.1
\t  \tprop agent.hp sub 1
  \t\tprop Parasaurolophus.hp add 15
  \t]]
  ]]
]]


`
    },
    {
      "id": "Tyrannosaurus",
      "label": "Tyrannosaurus",
      "scriptText": `# BLUEPRINT Tyrannosaurus
# TAG isCharControllable true
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'pc_tyrannosaurus.png' 0

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.2

useFeature Movement
featProp Movement useAutoOrientation setTo true
featProp Movement movementType setTo 'edgeToEdge'

addProp hp Number 60
prop hp setMax 100
prop hp setMin 0

useFeature AgentWidgets
featCall AgentWidgets bindMeterTo hp
featProp AgentWidgets meterColor setTo 65280
exprPush {{ 'T-Rex #' + agent.id }}
featPropPop AgentWidgets text

useFeature Touches
featCall Touches monitor Triceratops b2b
featCall Touches monitor Parasaurolophus b2b
featCall Touches monitor Ankylosaurus b2b

addProp state String 'normal'

# PROGRAM EVENT
# PROGRAM UPDATE
every 1 runAtStart [[
//gets hungry over time
\tprop agent.hp sub 1
\t
//swap between costumes based on pc state (hungry, dead, scared, normal)
\tifExpr {{agent.getProp('state').value == 'hungry'}} [[
\t\tfeatCall Costume setCostume 'pc_tyrannosaurus_hungry.png' 0
\t]]
\tifExpr {{agent.getProp('state').value == 'dead'}} [[
\t\tfeatCall Costume setCostume 'pc_tyrannosaurus_dead.png' 0
\t]]
\tifExpr {{agent.getProp('state').value == 'normal'}} [[
\t\tfeatCall Costume setCostume 'pc_tyrannosaurus.png' 0
\t]]
\tifExpr {{agent.getProp('state').value == 'drowning'}} [[
\t\tfeatCall Costume setCostume 'pc_tyrannosaurus_drowning.png' 0
\t]]


//change state based on hunger/health
\tifExpr {{ agent.getProp('hp').value <= 25 && agent.getProp('hp').value > 0 }} [[
\t  \tprop Tyrannosaurus.state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16711680
\t]]
\tifExpr {{ agent.getProp('hp').value <= 50 && agent.getProp('hp').value >= 25}} [[
\t\tprop Tyrannosaurus.state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16737792
\t]]
\tifExpr {{ agent.getProp('hp').value > 50 }} [[
\t\tprop Tyrannosaurus.state setTo 'normal'
\t\tfeatProp AgentWidgets meterColor setTo 65280
\t]]
\tifExpr {{ agent.getProp('hp').value <= 0 }} [[
\t\tprop Tyrannosaurus.state setTo 'dead'
\t\tfeatCall Costume setCostume 'pc_tyrannosaurus_dead.png' 0
\t]]
]]

when Tyrannosaurus sees Ankylosaurus [[
  \tprop Ankylosaurus.spooked setTo true
]]
when Tyrannosaurus doesNotSee Ankylosaurus [[
  \tprop Ankylosaurus.spooked setTo false
]]

when Tyrannosaurus sees Parasaurolophus [[
  \tprop Parasaurolophus.spooked setTo true
]]
when Tyrannosaurus doesNotSee Parasaurolophus [[
  \tprop Parasaurolophus.spooked setTo false
]]

when Tyrannosaurus sees Triceratops [[
  \tprop Triceratops.spooked setTo true
]]
when Tyrannosaurus doesNotSee Triceratops [[
  \tprop Triceratops.spooked setTo false
]]

when Tyrannosaurus firstTouches Parasaurolophus [[
\tprop Parasaurolophus.attacked setTo true
\tprop agent.hp add 25
\t\tprop Parasaurolophus.hp sub 100

 ]]
 
 
 when Tyrannosaurus firstTouches Triceratops [[
\tprop Triceratops.attacked setTo true
\tprop agent.hp add 25
\tprop Triceratops.hp sub 100

 ]]
 
 
 when Tyrannosaurus firstTouches Ankylosaurus [[
\tprop Ankylosaurus.attacked setTo true
\tprop agent.hp add 25
\tprop Ankylosaurus.hp sub 100

 ]]
 




`
    },
    {
      "id": "Parasaurolophus",
      "label": "Parasaurolophus",
      "scriptText": `# BLUEPRINT Parasaurolophus
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'pc_parasaurolophus.png' 0

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.15

useFeature Movement
featProp Movement useAutoOrientation setTo true
featProp Movement movementType setTo 'wander'
featProp Movement distance setTo 5
featCall Movement seekNearest Berries

addProp maxHealth Number 250

addProp hp Number 200
prop hp setMax 250
prop hp setMin 0

useFeature AgentWidgets
featCall AgentWidgets bindMeterTo hp
featProp AgentWidgets meterColor setTo 65280
exprPush {{ 'Percy #' + agent.id }}
featPropPop AgentWidgets text

useFeature Touches
featCall Touches monitor Fern b2b
featCall Touches monitor Berries b2b
featCall Touches monitor Tyrannosaurus b2b
featCall Touches monitor Lake b2b
featCall Touches monitor River b2b

useFeature Vision
featProp Vision visionable setTo true

addProp state String 'default'
addProp spooked Boolean false
addProp attacked Boolean false

# PROGRAM EVENT
# PROGRAM UPDATE
every 1 runAtStart [[
//health goes down naturally over time
\tprop agent.hp sub 1
\t
//COSTUME + STATE SWAPS
//when the pc hasn't encountered a predator, costumes will change based on hunger/hp level
//when a pc is \"spooked\" (i.e. has been seen by a predator), they will appear scared until out of sight
//when a pc is \"attacked\" (i.e. has been touched by a predator), they will appear scared until >50 hp has been gained
//death state overrides all other states
\tifExpr {{agent.getProp('isInert').value === false }} [[ // if alive
\t\tifExpr {{agent.getProp('spooked').value === false && agent.getProp('attacked').value === false}} [[ //no predator engaged
\t\t\tifExpr {{agent.getProp('state').value == 'hungry'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus_hungry.png' 0
\t\t\t\t\t\t\t\t\t\t\t\tfeatProp Movement distance setTo 5

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'default'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus.png' 0
\t\t\t\t\t\t\t\t\t\t\t\tfeatProp Movement distance setTo 5

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'sick'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus_sick.png' 0
\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'swimming'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus_swimming.png' 0
\t\t\t\t\t\t\t\tfeatProp Movement distance setTo 6

\t\t\t]]
\t\t]]
\t
\t\tifExpr {{agent.getProp('spooked').value === true}} [[ //seen by predator
\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus_scared.png' 0
\t\t]]
\t
\t\tifExpr {{agent.getProp('attacked').value === true}} [[ //attacked by predator
\t\t\tifExpr {{agent.getProp('hp').value <= 50 }} [[
\t\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus_scared.png' 0
\t\t\t]]
\t\t\tifExpr {{agent.getProp('hp').value > 50 }} [[
\t\t\t\tfeatCall Costume setCostume 'pc_parasaurolophus.png' 0
\t\t\t\tprop attacked setTo false
\t\t\t]]
\t\t]]
\t]]
\tifExpr {{agent.getProp('isInert').value === true }} [[ //is dead
\t\tfeatCall Costume setCostume 'pc_parasaurolophus_dead.png' 0
\t]]\t
\t

\t
//update color of meter & state based on hunger level
\tifExpr {{ agent.getProp('hp').value <= 75}} [[
\t\tprop state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16711680 //red
\t]]
\tifExpr {{ agent.getProp('hp').value <= 150 && agent.getProp('hp').value > 75}} [[
\t\tprop state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16737792 //orange
\t]]
\tifExpr {{ agent.getProp('hp').value > 150}} [[
\t\tprop state setTo 'default'
\t\tfeatProp AgentWidgets meterColor setTo 65280 //green
\t]]
\tifExpr {{ agent.getProp('hp').value <= 0 }} [[
\t\tprop isInert setTo true
\t]]
]]

`
    },
    {
      "id": "Berries",
      "label": "Berries",
      "scriptText": `# BLUEPRINT Berries
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'npc_berries.png' 0

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.1

useFeature Touches
featCall Touches monitor Triceratops b2b
featCall Touches monitor Parasaurolophus b2b
featCall Touches monitor Ankylosaurus b2b

addProp hp Number 6
prop hp setMax 6
prop hp setMin 0

useFeature Population

addProp time Number 0
prop time setMax 50
prop time setMin 0

addProp repopRate Number 0
prop repopRate addRndInt 5 60
prop repopRate setMax 60
prop repopRate setMin 0

# PROGRAM EVENT
# PROGRAM UPDATE

every 1 runAtStart [[
\tifExpr {{agent.getProp('hp').value <= 1}} [[
\t\tprop isInert setTo true
\t\tprop visible setTo false
\t]]
\t
\tifExpr {{ agent.getProp('time').value == agent.getProp('repopRate').value }} [[
\t\tfeatCall Population createAgent Berries [[
        \tprop x addRndInt -150 150
       \t \tprop y addRndInt -150 150
       \t \tprop hp setTo 4
       \t \tprop repopRate setTo 0
       \t \tprop repopRate addRndInt 10 60
 \t   ]] 
\t]]
\texprPush {{(agent.getProp('hp').value * 0.02)}}
  \tfeatPropPop agent.Physics scale
\t
\tprop time add 1
\tifExpr {{ agent.getProp('time').value == 50 }} [[
\t\tprop time setTo 0
\t]]
]]

//gains health when eating Berries -- Berries shrinks when eaten
when Berries touches Parasaurolophus [[
  every 1 runAtStart [[
  \tifExpr {{ Parasaurolophus.getProp('hp').value > 0 && Parasaurolophus.getProp('hp').value < Parasaurolophus.getProp('maxHealth').value}} [[
  \t\tfeatCall agent.Costume setGlow 0.1
\t  \tprop agent.hp sub 1
  \t\tprop Parasaurolophus.hp add 5
  \t]]
  ]]
]]

when Berries touches Triceratops [[
  every 1 runAtStart [[
  \tifExpr {{ Triceratops.getProp('hp').value > 0 && Triceratops.getProp('hp').value < Triceratops.getProp('maxHealth').value}} [[
  \t\tprop Triceratops.hp sub 5
  \t\tprop Triceratops.state setTo 'sick'
  \t\tfeatCall agent.Costume setGlow 0.1
  \t]]
  ]]
]]

when Berries touches Ankylosaurus [[
  every 1 runAtStart [[
  \tifExpr {{ Ankylosaurus.getProp('hp').value > 0 && Ankylosaurus.getProp('hp').value < Ankylosaurus.getProp('maxHealth').value}} [[
  \t\tprop Ankylosaurus.hp sub 5
  \t\tprop Ankylosaurus.state setTo 'sick'
  \t\tfeatCall agent.Costume setGlow 0.1
  \t]]
  ]]
]]



`
    },
    {
      "id": "Timer",
      "label": "Timer",
      "scriptText": `# BLUEPRINT Timer
# PROGRAM DEFINE
useFeature AgentWidgets
useFeature Costume
featCall Costume setCostume 'onexone.json' 0
addProp time Number 0

featProp AgentWidgets text setTo 'Time: 0'

# PROGRAM INIT

prop x setTo 445
prop y setTo -256

      # PROGRAM UPDATE
  every 1 runAtStart [[
  prop time add 1
  exprPush {{ 'Time: ' + agent.getProp('time').value }}
  featPropPop AgentWidgets text
]]`
    },
    {
      "id": "Lake",
      "label": "Lake",
      "scriptText": `# BLUEPRINT Lake
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'npc_lake.png'

useFeature Physics
featProp Physics scale setTo 0.45

prop x setTo 0
prop y setTo 0
prop zIndex setTo -2

useFeature Touches
featCall Touches monitor Parasaurolophus b2b
featCall Touches monitor Triceratops b2b
featCall Touches monitor Tyrannosaurus b2b
featCall Touches monitor Ankylosaurus b2b

# PROGRAM INIT 
# PROGRAM EVENT
# PROGRAM UPDATE

when Lake touches Triceratops [[
  every 1 runAtStart [[
  \tprop Triceratops.state setTo 'drowning'
  ]]
]]

when Lake touches Ankylosaurus [[
  every 1 runAtStart [[
  \tprop Ankylosaurus.state setTo 'drowning'
  ]]
]]

when Lake touches Tyrannosaurus [[
  every 1 runAtStart [[
  \tprop Tyrannosaurus.state setTo 'drowning'
  ]]
]]


when Lake touches Parasaurolophus [[
  every 1 runAtStart [[
  \tprop Parasaurolophus.state setTo 'swimming'
  ]]
]]
`
    },
    {
      "id": "River",
      "label": "River",
      "scriptText": `# BLUEPRINT River
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'npc_river.png'

useFeature Physics
featProp Physics scale setTo 0.6

prop x setTo 0
prop y setTo 0
prop zIndex setTo -2

useFeature Touches
featCall Touches monitor Parasaurolophus b2b
featCall Touches monitor Triceratops b2b
featCall Touches monitor Tyrannosaurus b2b
featCall Touches monitor Ankylosaurus b2b

# PROGRAM INIT 
# PROGRAM EVENT
# PROGRAM UPDATE

when River touches Triceratops [[
  every 1 runAtStart [[
  \tprop Triceratops.state setTo 'drowning'
  ]]
]]

when River touches Ankylosaurus [[
  every 1 runAtStart [[
  \tprop Ankylosaurus.state setTo 'drowning'
  ]]
]]


when River touches Tyrannosaurus [[
  every 1 runAtStart [[
  \tprop Tyrannosaurus.state setTo 'drowning'
  ]]
]]

when River touches Parasaurolophus [[
  every 1 runAtStart [[
  \tprop Parasaurolophus.state setTo 'swimming'
  ]]
]]
`
    },
    {
      "id": "Ankylosaurus",
      "label": "Ankylosaurus",
      "scriptText": `# BLUEPRINT Ankylosaurus
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'pc_ankylosaurus.png' 0

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.15

useFeature Movement
featProp Movement useAutoOrientation setTo true
featProp Movement movementType setTo 'wander'
featProp Movement distance setTo 1.5
featCall Movement seekNearest Fern

addProp maxHealth Number 250

addProp hp Number 200
prop hp setMax 250
prop hp setMin 0

useFeature AgentWidgets
featCall AgentWidgets bindMeterTo hp
featProp AgentWidgets meterColor setTo 65280

exprPush {{ 'Annie #' + agent.id }}
featPropPop AgentWidgets text

exprPush {{ agent}}
dbgStack

useFeature Touches
featCall Touches monitor Fern b2b
featCall Touches monitor Berries b2b
featCall Touches monitor Tyrannosaurus b2b
featCall Touches monitor Lake b2b
featCall Touches monitor River b2b

useFeature Vision
featProp Vision visionable setTo true

addProp state String 'default'
addProp spooked Boolean false
addProp attacked Boolean false

# PROGRAM EVENT
# PROGRAM UPDATE
every 1 runAtStart [[
//health goes down naturally over time
\tprop agent.hp sub 1
\t
//COSTUME + STATE SWAPS
//when the pc hasn't encountered a predator, costumes will change based on hunger/hp level
//when a pc is \"spooked\" (i.e. has been seen by a predator), they will appear scared until out of sight
//when a pc is \"attacked\" (i.e. has been touched by a predator), they will appear scared until >50 hp has been gained
//death state overrides all other states
\tifExpr {{agent.getProp('isInert').value === false }} [[ // if alive
\t\tifExpr {{agent.getProp('spooked').value === false && agent.getProp('attacked').value === false}} [[ //no predator engaged
\t\t\tifExpr {{agent.getProp('state').value == 'hungry'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus_hungry.png' 0
\t\t\t\tfeatProp Movement distance setTo 1.5

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'default'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus.png' 0
\t\t\t\tfeatProp Movement distance setTo 1.5

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'sick'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus_sick.png' 0
\t\t\t\tfeatProp Movement distance setTo 1.5

\t\t\t]]
\t\t\tifExpr {{agent.getProp('state').value == 'drowning'}} [[
\t\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus_drowning.png' 0
\t\t\t\tfeatProp Movement distance setTo 0.5

\t\t\t]]
\t\t]]
\t
\t\tifExpr {{agent.getProp('spooked').value === true}} [[ //seen by predator
\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus_scared.png' 0
\t\t]]
\t
\t\tifExpr {{agent.getProp('attacked').value === true}} [[ //attacked by predator
\t\t\tifExpr {{agent.getProp('hp').value <= 50 }} [[
\t\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus_scared.png' 0
\t\t\t]]
\t\t\tifExpr {{agent.getProp('hp').value > 50 }} [[
\t\t\t\tfeatCall Costume setCostume 'pc_ankylosaurus.png' 0
\t\t\t\tprop attacked setTo false
\t\t\t]]
\t\t]]
\t]]
\tifExpr {{agent.getProp('isInert').value === true }} [[ //is dead
\t\tfeatCall Costume setCostume 'pc_ankylosaurus_dead.png' 0
\t]]\t
\t

\t
//update color of meter & state based on hunger level
\tifExpr {{ agent.getProp('hp').value <= 75}} [[
\t\tprop state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16711680 //red
\t]]
\tifExpr {{ agent.getProp('hp').value <= 150 && agent.getProp('hp').value > 75}} [[
\t\tprop state setTo 'hungry'
\t\tfeatProp AgentWidgets meterColor setTo 16737792 //orange
\t]]
\tifExpr {{ agent.getProp('hp').value > 150}} [[
\t\tprop state setTo 'default'
\t\tfeatProp AgentWidgets meterColor setTo 65280 //green
\t]]
\tifExpr {{ agent.getProp('hp').value <= 0 }} [[
\t\tprop isInert setTo true
\t]]
]]



`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "Background0",
      "bpid": "Background",
      "initScript": `prop x setTo -1.97
prop y setTo -2.15
prop zIndex setTo -5`
    },
    {
      "id": "17",
      "label": "Timer17",
      "bpid": "Timer",
      "initScript": `prop x setTo -353.35
prop y setTo -394.48`
    },
    {
      "id": "18",
      "label": "Fern18",
      "bpid": "Fern",
      "initScript": `prop x setTo 178.23
prop y setTo 139.10`
    },
    {
      "id": "19",
      "label": "Fern19",
      "bpid": "Fern",
      "initScript": `prop x setTo 152.11
prop y setTo -116.23`
    },
    {
      "id": "20",
      "label": "Fern20",
      "bpid": "Fern",
      "initScript": `prop x setTo -55.21
prop y setTo 338.17`
    },
    {
      "id": "21",
      "label": "Fern21",
      "bpid": "Fern",
      "initScript": `prop x setTo -117.73
prop y setTo -300.60`
    },
    {
      "id": "22",
      "label": "Fern22",
      "bpid": "Fern",
      "initScript": `prop x setTo -146.28
prop y setTo -127.82`
    },
    {
      "id": "23",
      "label": "Lake23",
      "bpid": "Lake",
      "initScript": `prop x setTo 3.76
prop y setTo 8.19`
    },
    {
      "id": "27",
      "label": "Ankylosaurus27",
      "bpid": "Ankylosaurus",
      "initScript": `prop x setTo 353.27
prop y setTo -120.31`
    },
    {
      "id": "28",
      "label": "Ankylosaurus28",
      "bpid": "Ankylosaurus",
      "initScript": `prop x setTo 161.22
prop y setTo 348.60`
    },
    {
      "id": "30",
      "label": "Fern30",
      "bpid": "Fern",
      "initScript": `prop x setTo 41.55
prop y setTo -240.47`
    },
    {
      "id": "31",
      "label": "Fern31",
      "bpid": "Fern",
      "initScript": `prop x setTo 82.34
prop y setTo 235.92`
    },
    {
      "id": "32",
      "label": "Fern32",
      "bpid": "Fern",
      "initScript": `prop x setTo -69.35
prop y setTo 169.95`
    },
    {
      "id": "33",
      "label": "Fern33",
      "bpid": "Fern",
      "initScript": `prop x setTo -239.72
prop y setTo 248.21`
    },
    {
      "id": "34",
      "label": "Fern34",
      "bpid": "Fern",
      "initScript": `prop x setTo -235.94
prop y setTo 40.69`
    },
    {
      "id": "35",
      "label": "Fern35",
      "bpid": "Fern",
      "initScript": `prop x setTo -294.25
prop y setTo -230.32`
    },
    {
      "id": "36",
      "label": "Triceratops36",
      "bpid": "Triceratops",
      "initScript": `prop x setTo 277.26
prop y setTo 10.59`
    },
    {
      "id": "37",
      "label": "Triceratops37",
      "bpid": "Triceratops",
      "initScript": `prop x setTo 83.20
prop y setTo -355.42`
    },
    {
      "id": "38",
      "label": "Triceratops38",
      "bpid": "Triceratops",
      "initScript": `prop x setTo 345.94
prop y setTo 155.67`
    },
    {
      "id": "39",
      "label": "Fern39",
      "bpid": "Fern",
      "initScript": `prop x setTo 373.16
prop y setTo 252.35`
    }
  ]
}