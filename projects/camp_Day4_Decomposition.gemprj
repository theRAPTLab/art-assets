{
  "id": "camp_Day4_Decomposition",
  "label": "CAMP EIP",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": "0x98f5ff",
    "roundsCanLoop": true
  },
  "rounds": [],
  "blueprints": [
    {
      "id": "Rock",
      "label": "Rock",
      "scriptText": `# BLUEPRINT Rock
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'boulder.json' 0

useFeature Physics
useFeature AgentWidgets

featProp Physics scale setTo 0.5`
    },
    {
      "id": "Worm",
      "label": "Worm",
      "scriptText": `# BLUEPRINT Worm
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE

useFeature Movement

// useFeature Cursor
useFeature Costume
featCall Costume setCostume 'worm.json' 2

// put above everything
prop zIndex setTo 100

// move between hungry and full where hungry will eat and full will release nutrients
addProp feeling String 'hungry'

// used internally to delay nutrient release when full
addProp nutrientCountStart Number 0

// STUDENTS_MAY_CHANGE set this lower for instant dispersal of nutrients, or higher to stretch it out
prop nutrientCountStart setTo 5
addProp nutrientCount Number 0

featProp Movement useAutoOrientation setTo true

addProp energyLevel Number 70
prop energyLevel setMax 100
prop energyLevel setMin 0

addProp matter Number 70
prop matter setMax 100
prop matter setMin 0

useFeature Physics
featProp Physics scale setTo 0.2

useFeature Touches
featCall Touches monitor Waste b2b
//featCall Touches monitor Soil b2b

useFeature AgentWidgets
// STUDENTS_MAY_CHANGE - to pick a different thing to display on the meter (note, color won't change below)
featProp AgentWidgets meterProp setTo energyLevel

// Green = 0x00FF00
featProp AgentWidgets meterColor setTo 65280

# PROGRAM UPDATE

when Worm touches Waste [[
  every 1 runAtStart [[

    // if hungry, eat
   // ifExpr {{ agent.getProp('feeling').value == 'hungry'}} [[
      // move energy and matter from the waste to the worm and glow so we notice
      // STUDENTS_MAY_CHANGE - if you want the worms to eat more or less each second change these numbers
      // waste loses matter
      prop Waste.matter sub 5
      // worms gain energy and matter
      prop Worm.energyLevel add 5
      prop Worm.matter add 5
      // worm glowss so we know it is eating
      featCall Costume setGlow 4

      // if you are nice and full of energy, note you are full and start poop count-down

//    ]]
  ]]
]]

when Worm lastTouches Waste [[
  featCall Costume setGlow 0
]]

every 1 runAtStart [[
  // energy goes down
  prop energyLevel sub 2

  // if out of energy ... die
  ifExpr {{agent.getProp('energyLevel').value == 0}} [[
    prop alpha setTo 0.3
    prop isInert setTo true
  ]]

        ifExpr {{ agent.getProp('energyLevel').value > 90 }} [[
          prop feeling setTo 'full'

          // set the glow to 0 to reflect not eating while full
          featCall Costume setGlow 0

          // change costume so we know we are full
          featCall Costume setCostume 'worm.json' 0

          exprPush {{ agent.getProp('nutrientCountStart').value }}
          propPop nutrientCount
        ]]
        
             ifExpr {{ agent.getProp('energyLevel').value < 90 }} [[
          prop feeling setTo 'full'

          // set the glow to 0 to reflect not eating while full
          featCall Costume setGlow 0

          // change costume so we know we are full
          featCall Costume setCostume 'worm.json' 1
        ]]   

  ifExpr {{ agent.prop.Movement.compassDirection.value === 'E' }} [[
    featProp Costume flipY setTo false
  ]]
  ifExpr {{ agent.prop.Movement.compassDirection.value === 'W' }} [[
    featProp Costume flipY setTo true
  ]]
]]`
    },
    {
      "id": "Bunny",
      "label": "Bunny",
      "scriptText": `# BLUEPRINT Bunny
# TAG isCharControllable true
# TAG isPozyxControllable true
# TAG isPTrackControllable false
# PROGRAM DEFINE

useFeature Population
// useFeature Global
useFeature Costume
useFeature Movement
//useFeature Cursor


featCall Costume setCostume \"bunny.png\" 0

// set bunny energy
addProp energyLevel Number 40
prop energyLevel setMax 50
prop energyLevel setMin 0

// to manage when it is full and releases waste
addProp feeling String \"hungry\"

// used internally to delay waste release when full
addProp wasteCountStart Number 0

// STUDENTS_MAY_CHANGE set this lower for instant dispersal of waste, or higher to stretch it out
prop wasteCountStart setTo 3
addProp wasteCount Number 0

addProp matter Number 50

prop matter setMax 50
prop matter setMin 0

useFeature Physics

featProp Physics scale setTo 0.3

useFeature Touches
featCall Touches monitor Plant b2b

useFeature AgentWidgets
// STUDENTS_MAY_CHANGE - to pick a different thing to display on the meter (note, color won't change below)
featProp AgentWidgets meterProp setTo energyLevel
// Green = 0x00FF00
featProp AgentWidgets meterColor setTo 65280

prop zIndex setTo 100

# PROGRAM UPDATE

ifExpr {{ agent.prop.Movement.compassDirection.value === 'E' }} [[
  featProp Costume flipX setTo false
]]
ifExpr {{ agent.prop.Movement.compassDirection.value === 'W' }} [[
  featProp Costume flipX setTo true
]]

when Bunny touches Plant [[
  every 1 runAtStart [[

    // if hungry, eat
    ifExpr {{ agent.getProp('feeling').value == 'hungry' }} [[
featCall Costume setCostume \"bunny_hungry.png\" 0

      // STUDENTS_MAY_CHANGE - switching these numbers models different speeds of how bunnies eat the plants
      // Plant matter goes down as it is eaten, as does Plant energy
      prop Plant.matter sub 5
      prop Plant.energyLevel sub 5
      // Bunny matter and energy go up from eating
      prop Bunny.matter add 5
      prop Bunny.energyLevel add 5
      featCall Bunny.Costume setGlow 4

      // if full, change costume and set timer to emit waste
      ifExpr {{ agent.getProp('energyLevel').value > 45 }} [[
featCall Costume setCostume \"bunny_full.png\" 0

        // set variables to be full and prepare to release waste
        prop feeling setTo \"full\"
        exprPush {{ agent.getProp('wasteCountStart').value }}
        propPop wasteCount
        featCall Bunny.Costume setGlow 0
      ]]
    ]]
  ]]
]]

when Bunny lastTouches Plant [[
  featCall Costume setGlow 0
]]

every 1 runAtStart [[
  ifExpr {{ agent.getProp('feeling').value == 'full' }} [[
    ifExpr {{ agent.getProp('wasteCount').value == 0 }} [[

      // STUDENTS_MAY_CHANGE - switching these numbers will change how bunnies produce waste [WORKS]
      prop energyLevel sub 20
      prop matter sub 20
      prop feeling setTo \"hungry\"
featCall Costume setCostume \"bunny.png\" 0
      featCall Population createAgent Waste [[
        // STUDENTS_MAY_CHANGE - switching these numbers changes where the waste appears and how much matter it starts with
        prop x addRndInt -20 20
        prop y addRndInt 50 150
        prop matter setTo 40
      ]]
    ]]

    ifExpr {{ agent.getProp('wasteCount').value > 0 }} [[
      prop wasteCount sub 1
    ]]
  ]]

  // use some energy from just livin / running around
  prop energyLevel sub 1

  // if out of energy ... die
  ifExpr {{ agent.getProp('energyLevel').value == 0 }} [[
    prop alpha setTo 0.3
    prop isInert setTo true
  ]]

]]
`
    },
    {
      "id": "Plant",
      "label": "Plant",
      "scriptText": `# BLUEPRINT Plant
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'plant_healthy.png' 0
// useFeature Global
useFeature Population

addProp energyLevel Number 50

// STUDENTS_MAY_CHANGE - set a different starting eneregy level, max or min (or make it random)
prop energyLevel setTo 50
prop energyLevel setMax 100
prop energyLevel setMin 0

// setup so that we can tweak the size more dynamically, and plant by plant
addProp minimumScale Number 0

// STUDENTS_MAY_CHANGE - set a different minimum size for the plants  (used to be 0.25)
prop minimumScale setTo 0
prop minimumScale setMax 1.0
prop minimumScale setMin -0.5

addProp nutrients Number 8

// STUDENTS_MAY_CHANGE - sete a different starting eneregy level, max or min?  A higher max will allow a lot more time before the plant looks bad
prop nutrients setTo 8
prop nutrients setMax 10
prop nutrients setMin 0

addProp matter Number 50

// STUDENTS_MAY_CHANGE - sete a different range or starting point of matter
prop matter setTo 50
prop matter setMax 100
prop matter setMin 0

prop zIndex setTo 0

useFeature Physics
useFeature Touches
featCall Touches monitor Sunbeam b2b
featCall Touches monitor Soil b2b
featCall Touches monitor Bunny b2b

useFeature AgentWidgets
// STUDENTS_MAY_CHANGE - to pick a different thing to display on the meter (note, color won't change below)
featProp AgentWidgets meterProp setTo energyLevel
// Green
featProp AgentWidgets meterColor setTo 65280

featCall AgentWidgets setMeterPosition 'middle'
featProp AgentWidgets text setTo ''

// always keep it right near the edge of the dirt, but give some variability
prop y setTo -50
prop y addRnd -10 10

# PROGRAM INIT

  // set size based on matter (assume matter max of 100) and that we waver between 80-100%
  exprPush {{ agent.getProp('minimumScale').value + agent.getProp('matter').value / 100 }}
  featPropPop Physics scale

# PROGRAM UPDATE

when Plant touches Sunbeam [[
  every 1 runAtStart [[
    prop Plant.energyLevel add 1
    prop Plant.matter add 1
    featCall Plant.Costume setGlow 4
  ]]
]]

when Plant lastTouches Sunbeam [[
  featCall Costume setGlow 0
]]

when Plant touches Soil [[
  every 1 [[
    ifExpr {{ Soil.getProp('nutrients').value > 0 }} [[
      prop Soil.nutrients sub 1
      prop Plant.nutrients add 1
    ]]
  ]]
]]

every 1 runAtStart [[

  // set size based on matter (assume matter max of 100) and that we waver between 80-100%
  exprPush {{ agent.getProp('minimumScale').value + agent.getProp('matter').value / 100 }}
  featPropPop Physics scale

  // if the plant is basically dead
  ifExpr {{ agent.getProp('matter').value < 10 }} [[

    // create a little bit of inorganic matter
    featCall Population createAgent Waste [[
      // STUDENTS_MAY_CHANGE - switching these numbers changes where the waste appears and how much matter it starts with
      prop x addRndInt -5 5
      prop y addRndInt 50 100
      prop matter setTo 20
    ]]

    // then remove the plant
    featCall Population removeAgent
  ]]


  // is it healthy?  Use some nutrients and then set color
  prop nutrients sub 1
  ifExpr {{ agent.getProp('nutrients').value > 6 }} [[
    // healthy
    featCall Costume setCostume 'plant_healthy.png' 0
  ]]
  ifExpr {{ agent.getProp('nutrients').value < 6 }} [[
    // ok, but not great
    featCall Costume setCostume 'plant_mediumhealth.png' 1
  ]]
  ifExpr {{ agent.getProp('nutrients').value < 2 }} [[
    // not doing well at all, so lets also lose some matter
    featCall Costume setCostume 'plant_weak.png' 2
    prop matter sub 1
  ]]
]]`
    },
    {
      "id": "Waste",
      "label": "Waste",
      "scriptText": `# BLUEPRINT Waste
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Population

useFeature Costume
featCall Costume setCostume 'organic_matter.json' 0

addProp matter Number 100
prop matter setMax 100
prop matter setMin 0

// scale up because the art is a bit small
useFeature Physics
featProp Physics scale setTo 0.4

// pick a random rotation to keep things looking interesting

// we need to be able to see when the waste is on soil and / or being eaten by a worm
useFeature Touches
featCall Touches monitor Worm b2b
//featCall Touches monitor Soil b2b

// make sure it is in front of the soil but behind the worms
prop zIndex setTo 100

useFeature AgentWidgets
// STUDENTS_MAY_CHANGE - to pick a different thing to display on the meter
featProp AgentWidgets meterProp setTo matter

featProp AgentWidgets meterColor setTo 5783616
featProp AgentWidgets text setTo ''

# PROGRAM UPDATE

every 1 runAtStart [[
  // remove if there is nothing left
  ifExpr {{ agent.getProp('matter').value < 1 }} [[
    featCall Population removeAgent
  ]]

  // scale based on amount of matter
    exprPush {{ (agent.getProp('matter').value / 150)}}
    featPropPop agent.Physics scale

]]
`
    },
    {
      "id": "Timer",
      "label": "Timer",
      "scriptText": `# BLUEPRINT Timer
# PROGRAM DEFINE
useFeature AgentWidgets
useFeature Costume
featCall Costume setCostume 'onexone.json' 0
addProp time Number 0

featProp AgentWidgets text setTo 'Time: 0'

# PROGRAM INIT

prop x setTo 445
prop y setTo -256

      # PROGRAM UPDATE
  every 1 runAtStart [[
  prop time add 1
  exprPush {{ 'Time: ' + agent.getProp('time').value }}
  featPropPop AgentWidgets text
]]`
    },
    {
      "id": "Background",
      "label": "Background",
      "scriptText": `# BLUEPRINT Background
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'background_decomp.png' 0
featCall Costume setScale 0.82

prop zIndex setTo -5
`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "Background0",
      "bpid": "Background",
      "initScript": `prop x setTo -0.35
prop y setTo -8.84`
    },
    {
      "id": "1",
      "label": "Plant1",
      "bpid": "Plant",
      "initScript": `prop x setTo -171.23
prop y setTo -43.09`
    },
    {
      "id": "2",
      "label": "Plant2",
      "bpid": "Plant",
      "initScript": `prop x setTo 179.42
prop y setTo -60.46`
    },
    {
      "id": "3",
      "label": "Plant3",
      "bpid": "Plant",
      "initScript": `prop x setTo 335.18
prop y setTo 48.44`
    },
    {
      "id": "4",
      "label": "Plant4",
      "bpid": "Plant",
      "initScript": `prop x setTo -357.37
prop y setTo 80.17`
    },
    {
      "id": "5",
      "label": "Waste5",
      "bpid": "Waste",
      "initScript": `prop x setTo 220.83
prop y setTo 247.42`
    },
    {
      "id": "8",
      "label": "Plant8",
      "bpid": "Plant",
      "initScript": `prop x setTo 2.87
prop y setTo 65.90`
    },
    {
      "id": "9",
      "label": "Waste9",
      "bpid": "Waste",
      "initScript": `prop x setTo -217.03
prop y setTo 250.9`
    },
    {
      "id": "10",
      "label": "Waste10",
      "bpid": "Waste",
      "initScript": `prop x setTo -11.12
prop y setTo 296.86`
    },
    {
      "id": "11",
      "label": "Plant11",
      "bpid": "Plant",
      "initScript": `prop x setTo -174.19
prop y setTo 215.14`
    },
    {
      "id": "12",
      "label": "Plant12",
      "bpid": "Plant",
      "initScript": `prop x setTo -325.98
prop y setTo -107.47`
    }
  ]
}