{
  "id": "mammoths_foraging",
  "label": "Starter Model",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": "0x8A9A5B",
    "roundsCanLoop": true,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false


# PROGRAM INIT

// TODO: 
  // Add humans and other factors to impact plants
  // add graphs of progress
  // change artwork 

prop global.visible setTo false

// required directive
# PROGRAM UPDATE`
    },
    {
      "name": "Tree",
      "scriptText": `# BLUEPRINT Tree
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Graphing

addProp energy number 10
prop Tree.energy setMax 10
prop Tree.energy setMin 0
featProp Tree.Graphing.meterProp setTo 'energy'

featProp Tree.Costume.costumeName setTo 'WL_tree.png'
featProp Tree.Costume.scale setTo 0.25
prop Tree.zIndex setTo 100


# PROGRAM UPDATE

onEvent START [[
  // setup the tree energy and adapt the artwork
  // we could assume it wil always be over 10, but I want the option
  // to set it randomly later
  prop Tree.energy setTo 10
]]

  ifProp Tree.energy greaterThan 0 [[
    featProp Tree.Costume.costumeName setTo 'WL_tree.png'
    prop Tree.isInert setTo false
  ]]
  
  // Set the color of the energy meter depending on the amount of energy that the character has
  // These are green orange, and red in order
  ifProp Tree.energy greaterThanOrEqual 6 [[
    featProp Tree.Graphing.meterColor setTo 65280
  ]]
  ifProp Tree.energy lessThan 6 [[
    featProp Tree.Graphing.meterColor setTo 16737792
  ]]
  ifProp Tree.energy lessThan 3 [[
    featProp Tree.Graphing.meterColor setTo 16711680
      featProp Tree.Costume.costumeName setTo 'WL_tree_bare.png'
  ]]

  ifProp Tree.energy equal 0 [[
    prop Tree.isInert setTo true
  ]]
`
    },
    {
      "name": "Mammoth",
      "scriptText": `# BLUEPRINT Mammoth
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false


# PROGRAM INIT

addFeature Costume
addFeature Physics
addFeature Touches
addFeature Graphing
addFeature Movement
addFeature IU

featProp Mammoth.Costume.costumeName setTo 'MM_mammoth.png'
featProp Mammoth.Costume.scale setTo 0.3
prop Mammoth.zIndex setTo 300

addProp energy number 10
prop Mammoth.energy setMax 10
prop Mammoth.energy setMin 0
featProp Mammoth.Graphing.meterProp setTo 'energy'

featCall Mammoth.Touches monitor 'Tree' c2b


# PROGRAM UPDATE

// Mammoth slowly loses energy just from existing
every 2 runAfter [[
  ifProp Mammoth.isInert equal false [[
    // the mammoth loses energy, which means it needs to eat
    prop Mammoth.energy sub 1
  ]]
]]

// If the Mammoth reaches 0 enerfy it is dead

// Set the color of the energy meter depending on the amount of energy that the character has
// These are green orange, and red in order
ifProp Mammoth.energy greaterThanOrEqual 6 [[
  featProp Mammoth.Graphing.meterColor setTo 65280
]]
ifProp Mammoth.energy lessThan 6 [[
  featProp Mammoth.Graphing.meterColor setTo 16737792
]]
ifProp Mammoth.energy lessThan 3 [[
  featProp Mammoth.Graphing.meterColor setTo 16711680
]]

ifProp Mammoth.isInert equal false [[
  ifProp Mammoth.energy equal 0 [[
    featCall Mammoth.IU logString 'Mammoth died from starvation'
    prop Mammoth.alpha setTo 0.5
    prop Mammoth.isInert setTo true
  ]]
]]

when Mammoth centerfirsttouches Tree [[
  featProp Mammoth.Costume.glow setTo 1
]]

when Mammoth centerlasttouches Tree [[
  featProp Mammoth.Costume.glow setTo 0
]]

when Mammoth centertouches Tree [[
  every 1 runAtStart [[
    ifProp Mammoth.energy lessThanOrEqual 10 [[
      prop Mammoth.energy add 2
      prop Tree.energy sub 2
      featProp Mammoth.Costume.glow setTo 2
    ]]
  ]]
]]

// Flip the artwork to point left or right depending on the direction the character is moving
ifFeatProp Mammoth.Movement.compassDirection equal 'E' [[
  featProp Mammoth.Costume.flipX setTo false
]]
ifFeatProp Mammoth.Movement.compassDirection equal 'W' [[
  featProp Mammoth.Costume.flipX setTo true
]]`
    },
    {
      "name": "Predator",
      "scriptText": `# BLUEPRINT Predator
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Movement

featProp Predator.Costume.costumeName setTo 'MM_coyote.png'
featProp Predator.Costume.glowColor setToColor 16189448
featProp Predator.Costume.scale setTo 0.2
prop Predator.zIndex setTo 400

featCall Predator.Touches monitor Mammoth b2b

# PROGRAM UPDATE

when Predator firstTouches Mammoth [[
    featProp Predator.Costume.glow setTo 1
]]

when Predator lastTouches Mammoth [[
    featProp Predator.Costume.glow setTo 0
]]

when Predator touches Mammoth [[
  every 1 runAtStart [[
    featProp Predator.Costume.glow setTo 2
    prop Mammoth.energy sub 1
  ]]
]]

// Flip the artwork to point left or right depending on the direction the character is moving
ifFeatProp Predator.Movement.compassDirection equal 'E' [[
  featProp Predator.Costume.flipX setTo false
]]
ifFeatProp Predator.Movement.compassDirection equal 'W' [[
  featProp Predator.Costume.flipX setTo true
]]


`
    }
  ],
  "instances": [
    {
      "id": "1",
      "label": "Tree 1",
      "bpid": "Tree",
      "initScript": `prop Tree.x setTo -322.87
prop Tree.y setTo -322.41`
    },
    {
      "id": "2",
      "label": "Tree 2",
      "bpid": "Tree",
      "initScript": `prop Tree.x setTo -183.31
prop Tree.y setTo -327.08`
    },
    {
      "id": "3",
      "label": "Tree 3",
      "bpid": "Tree",
      "initScript": `prop Tree.x setTo -276.56
prop Tree.y setTo 261.64`
    }
  ]
}