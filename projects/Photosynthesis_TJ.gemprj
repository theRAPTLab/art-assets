{
  "id": "Photosynthesis_TJ",
  "label": "Starter Model",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": 102,
    "roundsCanLoop": true
  },
  "rounds": [],
  "blueprints": [
    {
      "name": "Molecule",
      "scriptText": `# BLUEPRINT Molecule
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved

addFeature Costume
featProp Molecule.Costume.costumeName setTo 'oxygen.png'
featProp Molecule.Costume.scale setTo 0.1

addProp state string 'oxygen'

addFeature Physics
addFeature Touches
featCall Molecule.Touches monitor 'Rabbit' b2b
featCall Molecule.Touches monitor 'Roots' b2b
featCall Molecule.Touches monitor 'Chloroplast' b2b
featCall Molecule.Touches monitor 'Plant_Body' b2b
featCall Molecule.Touches monitor 'OxygenGenerator' b2b
featCall Molecule.Touches monitor 'CarbonDioxideGenerator' b2b
featCall Molecule.Touches monitor 'WaterGenerator' b2b
featCall Molecule.Touches monitor 'SugarGenerator' b2b

addFeature Movement

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish

// setting starting states of molecules
when Molecule touches OxygenGenerator [[
  // insert code here
  ifProp OxygenGenerator.setupMode equal true [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'oxygen.png'
    prop Molecule.state setTo 'oxygen'
  ]]
]]

when Molecule touches CarbonDioxideGenerator [[
  // insert code here
  ifProp CarbonDioxideGenerator.setupMode equal true [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'carbon_dioxide.png'
    prop Molecule.state setTo 'carbon_dioxide'
  ]]
]]

when Molecule touches WaterGenerator [[
  // insert code here
  ifProp WaterGenerator.setupMode equal true [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'water.png'
    prop Molecule.state setTo 'water'
  ]]
]]

when Molecule touches SugarGenerator [[
  // insert code here
  ifProp SugarGenerator.setupMode equal true [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'sugar.png'
    prop Molecule.state setTo 'sugar'
  ]]
]]

// Rabbit changes oxygen to carbon dioxide
when Molecule touches Rabbit [[
  // insert code here
  ifProp Molecule.state equal 'oxygen' [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'carbon_dioxide.png'
    prop Molecule.state setTo 'carbon_dioxide'
    featProp Molecule.Costume.glow setTo 1
  ]]
]]

when Molecule touches Plant_Body [[
  // insert code here
  ifProp Molecule.state equal 'sugar' [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'empty_energy.png'
    prop Molecule.state setTo 'needsWater'
    prop global.plantGrowth add 1
  ]]
]]

// roots turn sugar into water and cause plant (left leaf) to grow
when Molecule touches Roots [[
  // insert code here
  ifProp Molecule.state equal 'needsWater' [[
    // insert code here
    featProp Molecule.Costume.costumeName setTo 'water.png'
    prop Molecule.state setTo 'water'
    featProp Molecule.Costume.glow setTo 1
  ]]
]]

// this is the script for photosynthesis; when water and carbon dioxide are on chloroplast and it's daytime, water turns into oxygen and carbon_dioxide turns into sugar

when Molecule firsttouches Chloroplast [[
  // insert code here
  ifProp Molecule.state equal 'water' [[
    // insert code here
    prop Chloroplast.hasWater add 1
  ]]
  ifProp Molecule.state equal 'carbon_dioxide' [[
    // insert code here
    prop Chloroplast.hasCarbonDioxide add 1
  ]]
]]

when Molecule touches Chloroplast [[
  // insert code here
  ifProp global.skyState equal 'daytime' [[
    // insert code here
    ifProp Molecule.state equal 'water' [[
      // ifExpr {{ Chloroplast.getProp('hasCarbonDioxide').value == true }} [[
      ifProp Chloroplast.hasCarbonDioxide greaterThanOrEqual 1 [[
        // insert code here
        featProp Molecule.Costume.costumeName setTo 'oxygen.png'
        prop Molecule.state setTo 'oxygen'
        featProp Molecule.Costume.glow setTo 1
        ifProp Chloroplast.hasCarbonDioxide greaterThan 0 [[
          // insert code here
          prop Chloroplast.hasCarbonDioxide sub 1
        ]]
      ]]
    ]]
    // ifExpr {{ Chloroplast.getProp('hasWater').value == true }} [[
    ifProp Molecule.state equal 'carbon_dioxide' [[
      ifProp Chloroplast.hasWater greaterThanOrEqual 1 [[
        // insert code here
        featProp Molecule.Costume.costumeName setTo 'sugar.png'
        prop Molecule.state setTo 'sugar'
        featProp Molecule.Costume.glow setTo 1
        ifProp Chloroplast.hasWater greaterThan 0 [[
          // insert code here
          prop Chloroplast.hasWater sub 1
        ]]
      ]]
    ]]
  ]]
]]

when Molecule lasttouches Chloroplast [[
  // insert code here
  ifProp Molecule.state equal 'water' [[
    // insert code here
    ifProp Chloroplast.hasWater greaterThan 0 [[
      // insert code here
      prop Chloroplast.hasWater sub 1
    ]]
  ]]
  ifProp Molecule.state equal 'carbon_dioxide' [[
    // insert code here
    ifProp Chloroplast.hasCarbonDioxide greaterThan 0 [[
      // insert code here
      prop Chloroplast.hasCarbonDioxide sub 1
    ]]
  ]]
]]`
    },
    {
      "name": "Rabbit",
      "scriptText": `# BLUEPRINT Rabbit
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Rabbit.Costume.costumeName setTo 'web_rabbit.png'

addFeature Physics
featProp Rabbit.Costume.scale setTo 0.5

addFeature Touches


# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "Roots",
      "scriptText": `# BLUEPRINT Roots
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Roots.Costume.costumeName setTo 'root_system.png'
featProp Roots.Costume.scale setTo 0.25
addFeature Physics

addFeature Touches


# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "Chloroplast",
      "scriptText": `# BLUEPRINT Chloroplast
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Chloroplast.Costume.costumeName setTo 'chloroplast.png'
featProp Chloroplast.Costume.scale setTo 0.25

addFeature Physics
addFeature Touches

featCall Chloroplast.Touches monitor 'Molecule' b2b

addProp hasWater number 0
prop Chloroplast.hasWater setTo 0
prop Chloroplast.hasWater setMin 0

addProp hasCarbonDioxide number 0
prop Chloroplast.hasCarbonDioxide setTo 0
prop Chloroplast.hasCarbonDioxide setMin 0


# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "Plant_Body",
      "scriptText": `# BLUEPRINT Plant_Body
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Plant_Body.Costume.costumeName setTo 'plant_body.png'
featProp Plant_Body.Costume.scale setTo 0.3

addFeature Physics
addFeature Touches


# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "Left_Leaf",
      "scriptText": `# BLUEPRINT Left_Leaf
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Left_Leaf.Costume.costumeName setTo 'left_leaf.png'
// featProp Left_Leaf.Costume.scale setTo 0.1
exprPush {{ (global.getProp('plantGrowth').value / 50 + 0.1) }}
featPropPop Left_Leaf.Costume.scale

addFeature Physics

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish

// left leaf grows everytime sugar is deposited/everytime sugar changes to water in the roots
every 1 [[
  exprPush {{ (global.getProp('plantGrowth').value / 50 + 0.1) }}
  featPropPop Left_Leaf.Costume.scale
]]`
    },
    {
      "name": "Right_Leaf",
      "scriptText": `# BLUEPRINT Right_Leaf
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Right_Leaf.Costume.costumeName setTo 'right_leaf.png'
featProp Right_Leaf.Costume.scale setTo 0.55

addFeature Physics
addFeature Touches


# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "Ground",
      "scriptText": `# BLUEPRINT Ground
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Ground.Costume.costumeName setTo 'dirt_ground.png'

addFeature Physics
addFeature Touches

featProp Ground.Costume.scale setTo 0.3

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish`
    },
    {
      "name": "Sky",
      "scriptText": `# BLUEPRINT Sky
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp Sky.Costume.costumeName setTo 'daytime.png'

addFeature Physics
featProp Sky.Costume.scale setTo 0.3

addProp state string 'daytime'
prop global.skyState setTo 'daytime'

addProp changed boolean false
prop Sky.changed setTo false

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish

every 10 [[
  // insert code here
  // ifExpr {{Sky.getProp('state').value == 'daytime'}} [[
  ifProp Sky.state equal 'daytime' [[
    // insert code here
    //featProp Sky.Costume.costumeName setTo 'dusk.png'
    featProp Sky.Costume.costumeName setTo 'nighttime.png'
    prop Sky.state setTo 'nighttime'
    prop global.skyState setTo 'nighttime'
    prop Sky.changed setTo true
  ]]
  ifExpr {{ Sky.getProp('changed').value == false }} [[
    // ifProp Sky.changed equal false [[
    // insert code here
    ifProp Sky.state equal 'nighttime' [[
      // insert code here
      featProp Sky.Costume.costumeName setTo 'daytime.png'
      prop Sky.state setTo 'daytime'
      prop global.skyState setTo 'daytime'
    ]]
  ]]
  prop Sky.changed setTo false
]]`
    },
    {
      "name": "WaterGenerator",
      "scriptText": `# BLUEPRINT WaterGenerator
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp WaterGenerator.Costume.costumeName setTo 'water.png'
featProp WaterGenerator.Costume.scale setTo 0.03

addFeature Physics
addFeature Touches

featCall WaterGenerator.Touches monitor 'Molecule' b2b

addProp setupMode boolean false
prop WaterGenerator.setupMode setTo true

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish
every 15 runAfter [[
  // insert code here
  ifProp WaterGenerator.setupMode equal true [[
    // insert code here
    prop WaterGenerator.setupMode setTo false
  ]]
]]`
    },
    {
      "name": "CarbonDioxideGenerator",
      "scriptText": `# BLUEPRINT CarbonDioxideGenerator
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp CarbonDioxideGenerator.Costume.costumeName setTo 'carbon_dioxide.png'
featProp CarbonDioxideGenerator.Costume.scale setTo 0.03

addFeature Physics
addFeature Touches

featCall CarbonDioxideGenerator.Touches monitor 'Molecule' b2b

addProp setupMode boolean false
prop CarbonDioxideGenerator.setupMode setTo true

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish
every 15 runAfter [[
  // insert code here
  ifProp CarbonDioxideGenerator.setupMode equal true [[
    // insert code here
  prop CarbonDioxideGenerator.setupMode setTo false
    ]]
]]
`
    },
    {
      "name": "SugarGenerator",
      "scriptText": `# BLUEPRINT SugarGenerator
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp SugarGenerator.Costume.costumeName setTo 'sugar.png'
featProp SugarGenerator.Costume.scale setTo 0.02

addFeature Physics
addFeature Touches

featCall SugarGenerator.Touches monitor 'Molecule' b2b

addProp setupMode boolean false
prop SugarGenerator.setupMode setTo true

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish
every 15 runAfter [[
  // insert code here
  ifProp SugarGenerator.setupMode equal true [[
    // insert code here
  prop SugarGenerator.setupMode setTo false
    ]]
]]
`
    },
    {
      "name": "OxygenGenerator",
      "scriptText": `# BLUEPRINT OxygenGenerator
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
// This is the most basic setup of properties that happens as soon as this character is saved
addFeature Costume
featProp OxygenGenerator.Costume.costumeName setTo 'oxygen.png'
featProp OxygenGenerator.Costume.scale setTo 0.03

addFeature Physics
addFeature Touches

featCall OxygenGenerator.Touches monitor 'Molecule' b2b

addProp setupMode boolean false
prop OxygenGenerator.setupMode setTo true

# PROGRAM UPDATE
// This is stuff that happens constantly and you can also check certain conditions
// For example every 1 runAtStart will run every time this is called, including the first, whereas every 5 will happen less offten and not the first time
// This is also where you can handle touches between characters such as When Algae touches Fish
every 15 runAfter [[
  // insert code here
  ifProp OxygenGenerator.setupMode equal true [[
    // insert code here
  prop OxygenGenerator.setupMode setTo false
    ]]
]]`
    },
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false
# PROGRAM INIT
// Explanation:
// This model involves learners in representing molecules cycling and changing through photosynthesis and respiration. The model involves a plant and a bunny, and a background that alternates between daytime and nighttime. The bunny breathes in oxygen and breathes out carbon dioxide, so when a learner-as-oxygen touches the bunny, they become carbon dioxide. If it is daytime, when a learner-as-carbon dioxide and a learner-as-water meet on the plants chloroplast, photosynthesis occurs and the carbon dioxide becomes sugar while the water becomes oxygen. Then, if the learner-as-sugar touches the plant's roots, they become water. When this happens, one of the plant's leaves (the left leaf) grows slightly, representing how photosynthesis creates sugars that enable the plant to grow. In this way, learners can rotate through the four types of molecules in the model. Note that in the starting state of the model, all learners are oxygen molecules, but there are \"molecule generators\" in the top right of the screen that enable them to switch to other molecule types before engaging with the rest of the model.

addFeature Population
prop global.visible setTo false

addProp plantGrowth number 0
addProp skyState string 'daytime'

// required directive
# PROGRAM UPDATE`
    }
  ],
  "instances": [
    {
      "id": "22",
      "label": "Sky22",
      "bpid": "Sky",
      "initScript": `prop x setTo -41.96
prop y setTo -68.16`
    },
    {
      "id": "23",
      "label": "Ground23",
      "bpid": "Ground",
      "initScript": `prop x setTo -43.19
prop y setTo -46.15`
    },
    {
      "id": "24",
      "label": "Plant_Body24",
      "bpid": "Plant_Body",
      "initScript": `prop x setTo -55.95
prop y setTo -100.78`
    },
    {
      "id": "25",
      "label": "Roots25",
      "bpid": "Roots",
      "initScript": `prop x setTo -51.98
prop y setTo 265.79`
    },
    {
      "id": "26",
      "label": "Rabbit26",
      "bpid": "Rabbit",
      "initScript": `prop x setTo -307.39
prop y setTo 93.94`
    },
    {
      "id": "27",
      "label": "Left_Leaf27",
      "bpid": "Left_Leaf",
      "initScript": `prop x setTo -183.48
prop y setTo -204.78`
    },
    {
      "id": "28",
      "label": "Right_Leaf28",
      "bpid": "Right_Leaf",
      "initScript": `prop x setTo 192.19
prop y setTo -38.30`
    },
    {
      "id": "29",
      "label": "Chloroplast29",
      "bpid": "Chloroplast",
      "initScript": `prop x setTo 226.00
prop y setTo -46.03`
    },
    {
      "id": "30",
      "label": "Molecule30",
      "bpid": "Molecule",
      "initScript": `prop x setTo 200.6
prop y setTo -216.39`
    },
    {
      "id": "31",
      "label": "Molecule31",
      "bpid": "Molecule",
      "initScript": `prop x setTo -302.79
prop y setTo -303.95`
    },
    {
      "id": "32",
      "label": "WaterGenerator32",
      "bpid": "WaterGenerator",
      "initScript": `prop x setTo 291.24
prop y setTo -385.54`
    },
    {
      "id": "33",
      "label": "CarbonDioxideGenerator33",
      "bpid": "CarbonDioxideGenerator",
      "initScript": `prop x setTo 199.36
prop y setTo -387.14`
    },
    {
      "id": "34",
      "label": "SugarGenerator34",
      "bpid": "SugarGenerator",
      "initScript": `prop x setTo 376.74
prop y setTo -385.06`
    },
    {
      "id": "35",
      "label": "OxygenGenerator35",
      "bpid": "OxygenGenerator",
      "initScript": `prop x setTo 107.35
prop y setTo -386.25`
    }
  ]
}